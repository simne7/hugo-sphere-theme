# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy example site to pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["feat/*"]
    #tags:
    #  - v*

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.124.1
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Create dist folder
        run: "npm run make:dist"
      - name: Debug
        run: "tree dist/"
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "::set-output name=short_sha::$calculatedSha"
      - name: Archive distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hugo-sphere-theme-${{ steps.vars.outputs.short_sha }}
          path: ./dist
      - name: Copy dist to theme folder
        run: mkdir ./exampleSite/themes && cp -r ./dist ./exampleSite/themes/hugo-sphere-theme
      - name: Build with Hugo
        working-directory: exampleSite
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact for example site
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./exampleSite/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: false
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    env:
      GH_TOKEN: ${{ github.token }}
    runs-on: ubuntu-latest
    needs: build
    # if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Debug I
        run: ls -R
      # download dist artifact
      - name: Download distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: hugo-sphere-theme
          path: ./hugo-sphere-theme
      - name: Debug II
        run: ls -R
      - name: Debug IIIa
        run: echo ${{ needs.build.outputs.short_sha }}
      - name: Debug IIIb
        run: echo ${{ needs.build.steps.vars.outputs.short_sha }}
      - name: Create TAR archive
        run: cd hugo-sphere-theme && tar -czf ../hugo-sphere-theme-v0.0.0.tar.gz .
      - name: Create ZIP archive
        run: cd hugo-sphere-theme && zip -r ../hugo-sphere-theme-v0.0.0.zip .
      - name: Debug IV
        run: ls -R
      # create release from tag and attach archives
      - name: Create release
        run: gh release create v0.0.0 --repo ${{ github.repositoryUrl }} --notes "test release" ./hugo-sphere-theme-v0.0.0.*
